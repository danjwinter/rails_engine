exit
Invoice.paid.joins(:invoice_items).sum("quantity * unit_price")
Invoice.paid
exit
Invoice.paid
Invoice.successful
exit
Merchant.joins(:transactions).where(transactions: { result: "success" }).find(1).invoices
Merchant.joins(:transactions).where(transactions: { result: "success" }).find(1)
Merchant.joins(:transactions).where(transactions: { result: "success" })
exit
Merchant.joins(invoices: :transactions).where(result: "success")
Merchant.joins(invoices: :transactions)
Merchant.find(5).joins(invoices: :transactions)
Merchant.find(5).joins(invoices: transactions)
Merchant.find(5).invoices.joins(:transactions).where(result: "success")
Merchant.find(5).invoices.joins(:transactions)
Merchant.find(5).invoices.paid
Merchant.find(4).invoices.paid
Merchant.find(params[:id]).invoices.paid
exit
Merchant.find(params[:id]).invoices.paid
exit
Merchant.find(params[:id]).transactions.successful
Merchant.find(params[:id]).invoices.paid
Merchant.find(params[:id]).transactions
exit
Merchant.find(params[:id]).transactions
Merchant.
Merchant.find(params[:id]).invoices
Merchant.find(params[:id])
exit
Merchant.find(params[:id]).transactions.where(result: "success")
Merchant.find(params[:id]).transactions
Merchant.find(params[:id])
exit
Merchant.find(params[:id])
exit
Merchant.find(params[:id]).invoices.transactions
Transaction.where(result: "success")
Transaction.all
Merchant.find(params[:id]).invoices.transactions
Merchant.find(params[:id]).invoices
Merchant.find(params[:id]).transactions
Merchant.find(params[:id])
m = Merchant.find(parmas[:id])
m
m = Merchant.find(params[:id])
Merchant.find(params[:id])
exit
Item.all
InvoiceItem.all
exit
exut
Invoice.all
Customer.all
params[:id]
exit
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
exit
p[:unit_price]
p
p = item_params
p
p = item_params[:unit_price]
p = item_params
params
item_params
item_params.dup
item_params
exit
s
step
item_params[:unit_price]
item_params
c
create(:item)
exit
Merchant.find(params[:id]).items.count
exit
Merchant.find(params[:id]).items.count
Merchant.find(params[:id]).items
Merchant.find(params[:id])
exit
params
Merchant.all
exit
Merchant.all
Merchant.find(params[:merchant_id]).joins(:items)
params
exit
InvoiceItem.all
InvoiceItem.where(invoice_item_params)
params
exit
params
c
InvoiceItem.where(invoice_item_params).take
params
exit
@query.where("last_name ilike ?", "Kirlin")
@query.whereCustomer.where("last_name ilike ?", "Kirlin")
@query = Customer.where("#{customer_params.keys.first} ilike ?", customer_params.values.first.downcase)
l = customer_params[1]
l = customer_params.last
f = customer_params.first
customer_params.first
customer_params
exit
index
c
continue
get :find, id: @item.id, format: :json
continue
get :index, format: :json
get :index
continue
api_v1_items_path
get :index
exit
:index
api_v1_items_path
exit
item_params
Item.where(item_params).count
Item.where(item_params)
search_attribute
c
search_attribute
c
search_attribute
c
search_attribute
c
search_attribute
c
search_attribute
exit
Item.all
search_attribute
exit
Item.all.count
Item.all
c
exit
search_parameter
exit
response
response.body
exit
json_response
exit
params_needing_downcase.include?(search_attribute)
params_needing_downcase
search_attribute
c
search_attribute
exit
search_attribute
search_parameter
exit
response.body
json_response
exit
Item.find_by(item_params)exit
Item.find_by(item_params)
item_params
params
search_parameter
DateTime.new(search_parameter)
DateTime.new(seach_parameter)
Item.first.created_at.class
Item.first.created_at
Item.first
Item.find(1)
search_parameter
search_attribute
exit
params
exit
item_response
exit
search_attribute
params
exit
params
c
params
c
Item.find(params[:id])
request.query_string.empty?
request.query_string
request
c
params
c
exit
params[:name]
params
request.query_string
c
Item.find_by("id=12")
Item.find("id=12")
Item.respond_to? :find
Item.respond_to? :find_all
"2".is_a? Numeric
request.query_string
params[:id]
params
c
exit
response.body
response
exit
@csv[0]
@csv
